"""格式化字符串之使用百分号作为占位符"""
"""
一、 什么是格式化字符串
     格式化字符串就是按一定格式输出的字符串。
     例如: 字符串'2020-12-07 21:41:20'就是一个格式化字符串，它的格式为:'年-月-日 时分秒'。
     再例如： 经过计算得到一个结果，想用一个有格式的字符串进行输出，格式为： '计算结果是:xxx'。
     
     如果想得到格式化字符串，常见的方式有三种:
1、 使用百分号作为占位符
2、 使用花括号作为占位符
3、 使用美元符作为占位符

    顾名思义，占位符就是先占住一个位置的符号。在定义格式化字符串时，可以使用占位符先占住
某些固定位置，等访问字符串的时候，再将所有的占位符替换成实际值。例如，可以定义这样的格式化字符串:
'%Y-%m-%d %H:%M:%S'，其中，%Y、%m、%d %H、%M、%S都是占位符，分别代表年、月、日、时、分、秒
在访问字符串的时候，如果给出的实际值分别是2020、12、7、21、41、20，那么得到的格式化字符串就是
'2020-12-07 21:41:20' ，如果给出的实际值分别是2022、12、7、21、41、20，那么得到的格式化字符串就是
'2022-12-07 21:41:20'.
"""

"""
二、 格式化字符串使用百分号作为占位符
"""
from datetime import datetime

print(datetime(2020, 12, 7, 21, 41, 20).strftime('%Y-%m-%d %H:%M:%S'))  # 2020-12-07 21:41:20

# '2022-12-07 21:41:20'
print(datetime(2022, 12, 7, 21, 41, 20).strftime('%Y-%m-%d %H:%M:%S'))

"""
   常见的表示不同数据类型的占位符有:
%s： 表示字符串
%i或%d： 表示整数
%f: 表示浮点数
"""
book = '<<数据结构与算法>>'
s = '买了一本书: %s' % book
print(s)  # 买了一本书: <<数据结构与算法>>
"""
  当定义的格式化字符串包含两个及两个以上的占位符时，必须将所有的实际值，封装在元组中。
"""
price = 68.88
s = '花了%f, 买了一本书: %s' % (price, book)
print(s)  # 花了68.880000, 买了一本书: <<数据结构与算法>>
"""
  如果不确定哪种占位符，那么%s永远起作用，它会把任何数据类型转换字符串。
"""
s = '花了%s, 买了一本书: %s' % (price, book)
print(s)  # 花了68.88, 买了一本书: <<数据结构与算法>>

"""
   如果定义的格式化字符串中的%是一个普通字符，需要使用两个%%对其进行转义
"""
# print('我的工作已经完成了%d%' % 80)
print('我的工作已经完成了%d%%' % 80)  # 我的工作已经完成了80%

"""
   占位符%中可以指定宽度。
   数字和字符串都是右对齐。
"""
print('%10d' % 58)  #         58
print('%10s' % '58')  #         58

"""
   占位符%中可以指定精度。
"""
print('%.3f' % 3.1415926)  # 3.142
print('%.5s' % 'HelloWorld')  # Hello

# 同时指定宽度和精度
print('%8.3f' % 3.1415926)  #    3.142
